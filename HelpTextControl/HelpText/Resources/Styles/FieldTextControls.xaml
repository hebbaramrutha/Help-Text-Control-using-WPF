<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
                    xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
                    xmlns:local="clr-namespace:HelpTextControl.HelpText.Resources.Styles">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseDictionary.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="TextBlock"
           x:Key="BaseTextBlockStyle">
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="{StaticResource BaseFontSize}" />
        <Setter Property="FontFamily"
                Value="{StaticResource BaseFontFamily}" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="{StaticResource BaseFontSize}" />
        <Setter Property="FontFamily"
                Value="{StaticResource BaseFontFamily}" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>
    <Style x:Key="BaseDecimalUpDownStyle"
           TargetType="xctk:DecimalUpDown">
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="{StaticResource BaseFontSize}" />
        <Setter Property="Background"
                Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="FontFamily"
                Value="{StaticResource BaseFontFamily}" />
        <Setter Property="Height"
                Value="{StaticResource BaseTextBoxHeight}" />
        <Setter Property="Width"
                Value="{StaticResource BaseTextBoxWidth}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource BaseBorderThickness}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource GreyBrush}" />
        <Setter Property="Padding"
                Value="3" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Polygon Fill="{StaticResource ErrorPolygonFillBrush}"
                                 Margin="0,2,2,0"
                                 Points="10,10 10,0 0,0"
                                 VerticalAlignment="Top"
                                 HorizontalAlignment="Right"
                                 Tag="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}">
                            <Polygon.ToolTip>
                                <ToolTip Content="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                                         BorderThickness="{StaticResource BaseErrorTooltipBorderThickness}"
                                         Foreground="{StaticResource ErrorTooltipForegroundBrush}"
                                         Background="{StaticResource ErrorTooltipBackgroundBrush}"
                                         FontFamily="{StaticResource BaseFontFamily}" />
                            </Polygon.ToolTip>
                        </Polygon>
                        <AdornedElementPlaceholder x:Name="adorner">
                            <Border BorderBrush="{StaticResource ErrorBorderBrush}"
                                    BorderThickness="{StaticResource BaseErrorBorderThickness}" />
                        </AdornedElementPlaceholder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius"
                        Value="3" />
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="Label"
           x:Key="BaseLabelStyle">
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="{StaticResource BaseFontSize}" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="FontFamily"
                Value="{StaticResource BaseFontFamily}" />
    </Style>

    <Style TargetType="{x:Type TextBox}"
           x:Key="BaseTextBoxStyle">
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="{StaticResource BaseFontSize}" />
        <Setter Property="Background"
                Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="FontFamily"
                Value="{StaticResource BaseFontFamily}" />
        <Setter Property="Height"
                Value="{StaticResource BaseTextBoxHeight}" />
        <Setter Property="Width"
                Value="{StaticResource BaseTextBoxWidth}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource BaseBorderThickness}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource GreyBrush}" />
        <Setter Property="Padding"
                Value="1.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            <Setter Property="Tag" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property = "BorderBrush" TargetName="border"  Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property = "BorderBrush" TargetName="border"  Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <AdornedElementPlaceholder x:Name="adorner">
                            <Border BorderBrush="{StaticResource ErrorBorderBrush}"
                                    BorderThickness="{StaticResource BaseErrorBorderThickness}" />
                        </AdornedElementPlaceholder>
                        <Polygon Fill="{StaticResource ErrorPolygonFillBrush}"
                                 Margin="0,2,2,0"
                                 Points="10,10 10,0 0,0"
                                 VerticalAlignment="Top"
                                 HorizontalAlignment="Right" >
                        </Polygon>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius"
                        Value="3" />
            </Style>
            <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="{StaticResource ErrorPolygonFillBrush}"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="{StaticResource BaseErrorBorderThickness}"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="WatermarkTextBoxStyle1" TargetType="{x:Type xctk:WatermarkTextBox}">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius"
                        Value="3" />
            </Style>
            <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="{StaticResource ErrorPolygonFillBrush}"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="{StaticResource BaseErrorBorderThickness}"/>
            </Style>
        </Style.Resources>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <AdornedElementPlaceholder x:Name="adorner">
                            <Border BorderBrush="{StaticResource ErrorBorderBrush}"
                                    BorderThickness="{StaticResource BaseErrorBorderThickness}" />
                        </AdornedElementPlaceholder>
                        <Polygon Fill="{StaticResource ErrorPolygonFillBrush}"
                                 Margin="0,2,2,0"
                                 Points="10,10 10,0 0,0"
                                 VerticalAlignment="Top"
                                 HorizontalAlignment="Right" >
                        </Polygon>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding}" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Focusable="False"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:WatermarkTextBox}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <ContentPresenter x:Name="PART_WatermarkHost" Content="{TemplateBinding Watermark}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter.ContentTemplate>
                                        <Binding Path="WatermarkTemplate" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.TargetNullValue>
                                                <DataTemplate>
                                                    <ContentControl Content="{Binding}" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Focusable="False"/>
                                                </DataTemplate>
                                            </Binding.TargetNullValue>
                                        </Binding>
                                    </ContentPresenter.ContentTemplate>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOverVisual" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FF5794BF" Offset="0.05"/>
                                    <GradientStop Color="#FFB7D5EA" Offset="0.07"/>
                                    <GradientStop Color="#FFC7E2F1" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <Border x:Name="FocusVisual" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FF3D7BAD" Offset="0.05"/>
                                    <GradientStop Color="#FFA4C9E3" Offset="0.07"/>
                                    <GradientStop Color="#FFB7D9ED" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            <Setter Property="Tag" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="KeepWatermarkOnGotFocus" Value="False"/>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_WatermarkHost" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="KeepWatermarkOnGotFocus" Value="True"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="PART_WatermarkHost" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlMouseOverBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DatePicker}"
           x:Key="BaseDatePickerStyle">
        <Setter Property="Width"
                Value="{StaticResource BaseTextBoxWidth}" />
        <Setter Property="Padding"
                Value="3" />
        <!--<Setter Property="Height"
                Value="{StaticResource BaseTextBoxHeight}" />-->
        <!--<Setter Property="BorderBrush" Value="Red" />-->
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable"
                Value="True" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <AdornedElementPlaceholder x:Name="adorner">
                            <Border BorderBrush="{StaticResource ErrorBorderBrush}"
                                    BorderThickness="{StaticResource BaseErrorBorderThickness}" />
                        </AdornedElementPlaceholder>
                        <Polygon Fill="{StaticResource ErrorPolygonFillBrush}"
                                 Margin="0,2,2,0"
                                 Points="10,10 10,0 0,0"
                                 VerticalAlignment="Top"
                                 HorizontalAlignment="Right" >
                        </Polygon>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius"
                        Value="1" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource GreyBrush}" />
            </Style>

            <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="{StaticResource ErrorPolygonFillBrush}"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="{StaticResource BaseErrorBorderThickness}"/>
            </Style>
        </Style.Resources>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="Tag" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="BaseDateTimeUpDownStyle"
           TargetType="xctk:DateTimeUpDown">
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="{StaticResource BaseFontSize}" />
        <Setter Property="Background"
                Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="FontFamily"
                Value="{StaticResource BaseFontFamily}" />
        <Setter Property="Height"
                Value="{StaticResource BaseTextBoxHeight}" />

        <Setter Property="BorderThickness"
                Value="{StaticResource BaseBorderThickness}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource GreyBrush}" />
        <Setter Property="Padding"
                Value="3" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Polygon Fill="{StaticResource ErrorPolygonFillBrush}"
                                 Margin="0,2,2,0"
                                 Points="10,10 10,0 0,0"
                                 VerticalAlignment="Top"
                                 HorizontalAlignment="Right"
                                 Tag="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}">
                            <Polygon.ToolTip>
                                <ToolTip Content="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                                         BorderThickness="{StaticResource BaseErrorTooltipBorderThickness}"
                                         Foreground="{StaticResource ErrorTooltipForegroundBrush}"
                                         Background="{StaticResource ErrorTooltipBackgroundBrush}"
                                         FontFamily="{StaticResource BaseFontFamily}" />
                            </Polygon.ToolTip>
                        </Polygon>
                        <AdornedElementPlaceholder x:Name="adorner">
                            <Border BorderBrush="{StaticResource ErrorBorderBrush}"
                                    BorderThickness="{StaticResource BaseErrorBorderThickness}" />
                        </AdornedElementPlaceholder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius"
                        Value="3" />
            </Style>
        </Style.Resources>
    </Style>

    <!--Link Button-->
    <Style x:Key="LinkButton"
           TargetType="Button">

        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Background"
                Value="#FF057DBD" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="{StaticResource BaseLinkButtonFontSize}" />
        <Setter Property="FontFamily"
                Value="{StaticResource BaseFontFamily}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding  ContentTemplate}"
                                      VerticalAlignment="Center">
                        <ContentPresenter.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextDecorations"
                                        Value="None" />
                            </Style>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground"
                Value="#FF057DBD" />
        <Setter Property="Cursor"
                Value="Hand" />
    </Style>

</ResourceDictionary>